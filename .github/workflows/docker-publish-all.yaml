---
  name: Build, package and publish
  "on":
    push:
      branches:
        - main
    pull_request:

  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

  jobs:
    lint:
      name: Lint
      runs-on: ubuntu-latest
      permissions:
        # Required: allow read access to the content for analysis.
        contents: read
        # Optional: allow read access to pull request. Use with `only-new-issues` option.
        pull-requests: read
        # Optional: allow write access to checks to allow the action to annotate code in the PR.
        checks: write
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        - name: Golangci-lint
          uses: golangci/golangci-lint-action@e60da84bfae8c7920a47be973d75e15710aa8bd7 # v6.3.0

    build:
      name: Build
      runs-on: ubuntu-latest
      needs:
        - lint
      permissions:
        packages: write
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3
        - name: Log in to the Container registry
          uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=raw,enable={{is_default_branch}},value={{date 'YYYY-MM-DDTHH.mm.ss' tz='UTC'}}
        - name: Build Docker image
          uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6
          with:
            context: .
            push: ${{ format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-cache
            cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-cache,mode=max
