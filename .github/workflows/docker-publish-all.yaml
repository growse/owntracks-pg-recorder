---
  name: Build, package and publish
  "on":
    push:
      branches:
        - main
    pull_request:

  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

  jobs:
    lint:
      name: Lint
      runs-on: ubuntu-latest
      permissions:
        # Required: allow read access to the content for analysis.
        contents: read
        # Optional: allow read access to pull request. Use with `only-new-issues` option.
        pull-requests: read
        # Optional: allow write access to checks to allow the action to annotate code in the PR.
        checks: write
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        - name: Golangci-lint
          uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2

    build:
      name: Build
      runs-on: ubuntu-latest
      needs:
        - lint
      permissions:
        packages: write
      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        - name: Log in to the Container registry
          uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=raw,enable={{is_default_branch}},value={{date 'YYYY-MM-DDTHH.mm.ss' tz='UTC'}}
        - name: Build Docker image
          uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
          with:
            context: .
            push: ${{ format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-cache
            cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-cache,mode=max
